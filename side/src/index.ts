import childProcess from 'child_process'
import colors from 'colors'
import fs from 'fs-extra'
import path from 'path'

import commander from './setup/commander'
import { askInitialPrompt, askQuestions, AskQuestionsOptions } from './setup/askQuestions'
import determineWhichTemplateToWrite from './service-templates'

const main = async () => {
  let destinationPath = null
  try {
    destinationPath = path.resolve(process.cwd(), commander())
    fs.mkdirSync(destinationPath)
    const service = await askInitialPrompt()
    await determineWhichTemplateToWrite(service, destinationPath)
  } catch (error) {
    console.error(colors.red('An error occurred.'), error)
    const willRemoveArgs: AskQuestionsOptions = {
      message: `Do you want to remove the files generated? This will remove everything at ${destinationPath}`,
      type: 'confirm',
      name: 'willRemove',
    }
    const willRemove = (await askQuestions(willRemoveArgs)) as boolean
    if (willRemove) {
      console.error(colors.red('Removing all files generated by this tool.'))
      childProcess.execSync(`rm -r ${destinationPath}`)
    }
  }
}

main()
